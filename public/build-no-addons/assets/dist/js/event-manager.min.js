(()=>{"use strict";new class{constructor(){this.components=new Map,this.classHandlers=new Map,this.initialized=!1,this.lastEvent=null,this.handleEvent=this.handleEvent.bind(this),"loading"===document.readyState?document.addEventListener("DOMContentLoaded",()=>this.init()):this.init()}init(){this.initialized||(console.log("[EventManager] Inicializando gerenciador de eventos baseado em classes"),this.setupEventListeners(),this.initialized=!0)}setupEventListeners(){document.addEventListener("click",this.handleEvent,!0),document.addEventListener("keydown",this.handleEvent,!0),document.addEventListener("focusin",this.handleEvent,!0),console.log("[EventManager] Listeners de eventos configurados")}registerComponent(e,{element:n,handler:o,classes:t=[]}){return console.group(`[EventManager] Registrando componente: ${e}`),n&&o?(console.log("[EventManager] Elemento do componente:",n),console.log("[EventManager] Classes fornecidas:",t),this.components.set(e,{element:n,handler:o,enabled:!0,classes:new Set(t)}),t.forEach(n=>{this.classHandlers.has(n)||this.classHandlers.set(n,new Set),this.classHandlers.get(n).add(e),console.log(`[EventManager] Classe registrada: .${n} para ${e}`)}),console.log(`[EventManager] Componente ${e} registrado com sucesso`),console.log("[EventManager] Componentes registrados:",Array.from(this.components.keys())),console.log("[EventManager] Classes registradas:",Array.from(this.classHandlers.keys())),console.groupEnd(),!0):(console.error(`[EventManager] Componente ${e} inválido: elemento ou handler não fornecido`),console.groupEnd(),!1)}handleEvent(e){if(console.group(`[EventManager] handleEvent - ${e.type}`),console.log("Evento recebido:",e.type,"em",e.target),e._eventManagerProcessed)return console.log("[EventManager] Evento já processado, ignorando..."),void console.groupEnd();if(this.lastEvent&&e.timeStamp-this.lastEvent<10)return console.log("[EventManager] Evento muito rápido, ignorando..."),void console.groupEnd();this.lastEvent=e.timeStamp;const n=this.findComponentsForEvent(e);if(n.size>0){console.log("[EventManager] Componentes para processar:",Array.from(n).join(", "));this.closestElement(e.target,".menu-item-has-children > a, .page_item_has_children > a, .submenu-toggle")?(console.log("[EventManager] Clique em item de menu, permitindo propagação controlada"),e.preventDefault()):e.stopPropagation(),e._eventManagerProcessed=!0,n.forEach(n=>{const o=this.components.get(n);if(o&&o.enabled&&o.handler)try{o.handler(e,o)}catch(e){console.error(`[EventManager] Erro no manipulador do componente ${n}:`,e)}})}else console.log("[EventManager] Nenhum componente encontrado para processar o evento");console.groupEnd()}findComponentsForEvent(e){const n=new Set;let o=e.target;console.group("[EventManager] findComponentsForEvent"),console.log("[EventManager] Procurando manipuladores para o elemento:",o),console.log("[EventManager] Classes do elemento:",o.className);const t=this.closestElement(o,".menu-item, .menu-item-has-children, .page_item_has_children, .submenu-toggle, .menu-item-has-children > a, .page_item_has_children > a");if(t&&(console.log("[EventManager] Clique em item de menu ou filho, verificando manipuladores..."),console.log("[EventManager] Tag do elemento:",t.tagName),console.log("[EventManager] Classes do item de menu:",t.className),t.classList&&t.classList.length>0?(console.log("[EventManager] Verificando classes do item de menu:",Array.from(t.classList).join(", ")),t.classList.forEach(e=>{this.classHandlers.has(e)&&(console.log(`[EventManager] Encontrada classe registrada: ${e}`),this.classHandlers.get(e).forEach(e=>{n.add(e),console.log(`[EventManager] Adicionando componente: ${e}`)}))})):console.log("[EventManager] Item de menu sem classes")),0===n.size)for(console.log("[EventManager] Nenhum manipulador encontrado, verificando ancestrais...");o&&o!==document.documentElement;){if(o.classList&&o.classList.length>0&&(console.log("[EventManager] Verificando elemento:",o),console.log("[EventManager] Classes:",Array.from(o.classList).join(", ")),o.classList.forEach(e=>{this.classHandlers.has(e)&&(console.log(`[EventManager] Encontrada classe registrada: ${e}`),this.classHandlers.get(e).forEach(e=>{n.add(e),console.log(`[EventManager] Adicionando componente: ${e}`)}))}),n.size>0)){console.log(`[EventManager] Encontrados ${n.size} componentes para o evento`);break}o=o.parentElement}else console.log(`[EventManager] Encontrados ${n.size} componentes no item de menu`);return console.log("[EventManager] Componentes que vão processar o evento:",Array.from(n).join(", ")),console.groupEnd(),n}closestElement(e,n){if(!e||!n)return null;if(e.closest)return e.closest(n);for(;e;){if(this.matchesSelector(e,n))return e;e=e.parentElement}return null}matchesSelector(e,n){const o=e.matches||e.matchesSelector||e.webkitMatchesSelector||e.mozMatchesSelector||e.msMatchesSelector||e.oMatchesSelector;if(o)return o.call(e,n);const t=(e.document||e.ownerDocument).querySelectorAll(n);let s=t.length;for(;--s>=0&&t.item(s)!==e;);return s>-1}setComponentEnabled(e,n=!0){const o=this.components.get(e);return!!o&&(o.enabled=n,console.log(`[EventManager] Componente ${e} ${n?"habilitado":"desabilitado"}`),!0)}destroy(){document.removeEventListener("click",this.handleEvent,!0),document.removeEventListener("keydown",this.handleEvent,!0),document.removeEventListener("focusin",this.handleEvent,!0),this.components.clear(),this.classHandlers.clear(),this.initialized=!1,this.lastEvent=null,console.log("[EventManager] Gerenciador de eventos desativado")}}})();
//# sourceMappingURL=event-manager.min.js.map